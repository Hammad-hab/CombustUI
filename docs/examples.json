[
  {
    "Name": "Basic Window",
    "Description": "This example demonstrates how to create a simple window with a title.",
    "Code": [
      "from mjui._app import Application",
      "from mjui.utils import rgb, convertStringToBytes, readFromStringBytes, GTK",
      "from mjui.fltk_bindings.bindings import *",
      "",
      "fn main() raises:",
      "    useScheme(GTK)",
      "    var app = Application()",
      "    var window = mjuiCreateWindow(800, 600, 1, 0, 0, convertStringToBytes(\"My First Window\"))",
      "    app.markWindowPTRAsMain(window)",
      "    mjuiShowWidget(window)",
      "    app.execute()"
    ]
  },
  {
    "Name": "Flexbox Layout",
    "Description": "This example shows how to use a vertical flexbox layout to arrange widgets.",
    "Code": [
      "from mjui._app import Application",
      "from mjui.utils import rgb, convertStringToBytes, readFromStringBytes, GTK",
      "from mjui.fltk_bindings.bindings import *",
      "from mjui.const import *",
      "",
      "fn main() raises:",
      "    useScheme(GTK)",
      "    var app = Application()",
      "    var window = mjuiCreateWindow(400, 300, 1, 0, 0, convertStringToBytes(\"Flexbox Example\"))",
      "    var layout = mjuiCreateLayoutFlex(0, 0, 400, 300, MJUI_MJUIEX_VERTICAL)",
      "",
      "    BEGIN_WIDGET_APPEND(layout)",
      "    var button1 = mjuiCreateButton(100, 30, 0, 0, 1, convertStringToBytes(\"Button 1\"))",
      "    var label1 = mjuiCreateLabel(0, 0, 150, 20, 2, convertStringToBytes(\"Label 1\"))",
      "    var button2 = mjuiCreateButton(100, 30, 0, 0, 3, convertStringToBytes(\"Button 2\"))",
      "    END_WIDGET_APPEND(layout)",
      "",
      "    mjuiFlexCalculateLayout(layout)",
      "    app.markWindowPTRAsMain(window)",
      "    mjuiShowWidget(window)",
      "    app.execute()"
    ]
  },
  {
    "Name": "Button Click Event",
    "Description": "This example demonstrates how to handle a button click event using EventHandler.",
    "Code": [
      "from mjui._app import Application",
      "from mjui.utils import rgb, convertStringToBytes, readFromStringBytes, GTK",
      "from mjui.fltk_bindings.bindings import *",
      "from mjui.const import *",
      "from mjui.EventHandler import EventHandler", 
      "",     
      "var click_count = 0",
      "",
      "fn button_handler() raises:",
      "    click_count += 1",
      "    print(\"Button clicked!\", click_count)",
      "",
      "fn main() raises:",
      "    useScheme(GTK)",
      "    var app = Application()",
      "    var window = mjuiCreateWindow(300, 200, 1, 0, 0, convertStringToBytes(\"Button Event\"))",
      "    var button = mjuiCreateButton(100, 40, 100, 80, 1001, convertStringToBytes(\"Click Me\"))",
      "",
      "    var handler = EventHandler()",
      "    handler.set(MJUI_PUSH, button_handler)",
      "    app.addEventListener(1001, handler)",
      "",
      "    app.markWindowPTRAsMain(window)",
      "    mjuiShowWidget(window)",
      "    app.execute()"
    ]
  },
  {
    "Name": "Text Input",
    "Description": "This example shows how to use an EventHandler to capture key presses in an input field.",
    "Code": [
      "from mjui._app import Application",
      "from mjui.utils import rgb, convertStringToBytes, readFromStringBytes, GTK",
      "from mjui.fltk_bindings.bindings import *",
      "from mjui.const import *",
      "from mjui.EventHandler import EventHandler",
      "",
      "fn key_handler() raises:",
      "    print(\"Key pressed!\")",
      "",
      "fn main() raises:",
      "    useScheme(GTK)",
      "    var app = Application()",
      "    var window = mjuiCreateWindow(500, 150, 1, 0, 0, convertStringToBytes(\"Text Input\"))",
      "    var input_field = mjuiCreateInput(50, 50, 400, 30, 2001, 0, convertStringToBytes(\"Type something...\"))",
      "",
      "    var handler = EventHandler()",
      "    handler.set(MJUI_KEYDOWN, key_handler)",
      "    app.addEventListener(2001, handler)",
      "",
      "    app.markWindowPTRAsMain(window)",
      "    mjuiShowWidget(window)",
      "    app.execute()"
    ]
  },
  {
    "Name": "Image Display",
    "Description": "This example demonstrates how to load and display an image in a window.",
    "Code": [
      "from mjui._app import Application",
      "from mjui.utils import rgb, convertStringToBytes, readFromStringBytes, GTK",
      "from mjui.fltk_bindings.bindings import *",
      "from mjui.const import *",
      "",
      "fn main() raises:",
      "    useScheme(GTK)",
      "    var app = Application()",
      "    var window = mjuiCreateWindow(400, 400, 1, 0, 0, convertStringToBytes(\"Image Display\"))",
      "    var image_label = mjuiCreateLabel(0, 0, 400, 400, 3001, convertStringToBytes(\"\"))",
      "",
      "    var img = mjuiLoadImg(300, 300, PNG, convertStringToBytes(\"docs/images/logo.png\"))",
      "    mjuiApplyImage(image_label, img)",
      "",
      "    app.markWindowPTRAsMain(window)",
      "    mjuiShowWidget(window)",
      "    app.execute()"
    ]
  },
  {
    "Name": "Choice Input and Theme Switching",
    "Description": "This example demonstrates how to use a choice input (dropdown) and change the UI theme dynamically when a button is pressed.",
    "Code": [
      "from mjui._app import Application",
      "from mjui.utils import rgb, convertStringToBytes, readFromStringBytes, GTK",
      "from mjui.fltk_bindings.bindings import *",
      "from mjui.const import *",
      "from mjui.EventHandler import EventHandler",
      "",
      "var app = Application()",
      "",
      "fn key_handler() raises:",
      "    var ptr = app.getElementById(0)",
      "    var index = mjuiGrabChoice(ptr)",
      "    useScheme(index)",
      "",
      "fn main() raises:",
      "    useScheme(GTK)",
      "    var window = mjuiCreateWindow(500, 200, 1, 0, 0, convertStringToBytes(\"Text Input\"))",
      "    var input_field = mjuiCreateChoice(50, 50, 400, 30)",
      "    var select = mjuiCreateButton(50, 130, 400, 30, 2001, convertStringToBytes(\"Convert\"))",
      "",
      "    mjuiAddOptionToChoice(input_field, convertStringToBytes(\"GTK\"))",
      "    mjuiAddOptionToChoice(input_field, convertStringToBytes(\"Gleam\"))",
      "    mjuiAddOptionToChoice(input_field, convertStringToBytes(\"Plastic\"))",
      "",
      "    mjuiSetWidgetColor(select, rgb(160, 160, 160))",
      "",
      "    var handler = EventHandler()",
      "    handler.set(MJUI_PUSH, key_handler)",
      "    app.addEventListener(2001, handler)",
      "    app.setElementById(0, input_field)",
      "",
      "    app.markWindowPTRAsMain(window)",
      "    mjuiShowWidget(window)",
      "    app.execute()"
    ]
  }
]
